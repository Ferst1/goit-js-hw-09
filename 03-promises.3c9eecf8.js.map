{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA6BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IApCPQ,EAAAZ,GAASa,OAAOC,OAEHC,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAMN,IAJA,IAAMC,EAAaC,SAASH,EAAMI,OAAOC,SAASnB,MAAMoB,OAClDC,EAAYJ,SAASH,EAAMI,OAAOC,SAASG,KAAKF,OAChDG,EAAcN,SAASH,EAAMI,OAAOC,SAASK,OAAOJ,OAEjDK,EAAI,EAAGA,GAAKF,EAAaE,IAChC3B,EAAc2B,EAAGT,GAAcS,EAAI,GAAKJ,GACrCK,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACjBQ,EAAAZ,GAASa,OAAOmB,QACd,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAGjD8B,OAAM,SAAAH,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAClBQ,EAAAZ,GAASa,OAAOsB,QACd,sBAAqCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init();\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const delayInput = parseInt(event.target.elements.delay.value);\n  const stepInput = parseInt(event.target.elements.step.value);\n  const amountInput = parseInt(event.target.elements.amount.value);\n\n  for (let i = 1; i <= amountInput; i++) {\n    createPromise(i, delayInput + (i - 1) * stepInput)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","init","document","querySelector","addEventListener","event","preventDefault","delayInput","parseInt","target","elements","value","stepInput","step","amountInput","amount","i","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.3c9eecf8.js.map"}