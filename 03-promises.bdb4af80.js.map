{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEAC,EAAAF,GAASG,OAAOC,OA2BhB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAlCAQ,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAaC,SAASH,EAAMI,OAAOC,SAAShB,MAAMiB,OAClDC,EAAYJ,SAASH,EAAMI,OAAOC,SAASG,KAAKF,OAChDG,EAAcN,SAASH,EAAMI,OAAOC,SAASK,OAAOJ,OAE1D,IAAK,IAAIK,EAAI,EAAGA,GAAKF,EAAaE,IAChCxB,EAAcwB,EAAGT,GAAcS,EAAI,GAAKJ,GACrCK,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBL,EAAAF,GAASG,OAAO4B,QACd,uBAAqBzB,QAAiBC,MAAU,IAGnDyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBL,EAAAF,GAASG,OAAO8B,QACd,sBAAoB3B,QAAiBC,MAAU,G,IA4DtCQ,SAASmB,eAAe,cAChCjB,iBAAiB,QAASkB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init();\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const delayInput = parseInt(event.target.elements.delay.value);\n  const stepInput = parseInt(event.target.elements.step.value);\n  const amountInput = parseInt(event.target.elements.amount.value);\n\n  for (let i = 1; i <= amountInput; i++) {\n    createPromise(i, delayInput + (i - 1) * stepInput)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// ----------------------------------------\n\n// amount = 5;\n// delay = 1000;\n// step = 500;\n\n// createPromise(1, 1000);\n// createPromise(2, 1500);\n// createPromise(3, 2000);\n// createPromise(4, 2500);\n// createPromise(5, 3000);\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     ('Промис выполнен успешно');\n//     position, delay;\n//     // Fulfill\n//   } else {\n//     reject('some error');\n//     // Reject\n//   }\n//   1500;\n// }\n\n// Promise.then(onFulfilled, onRegected);\n\n// // Пример использования Notiflix для отображения уведомлений\n// function showNotification() {\n//   Notiflix.Notify.success('Уведомление успешно отображено!');\n// }\n\n// Вызов функции при клике на кнопку \"Показать уведомление\"\nconst showButton = document.getElementById('showButton');\nshowButton.addEventListener('click', showNotification);\n"],"names":["$7Y9D8","parcelRequire","$parcel$interopDefault","Notify","init","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delayInput","parseInt","target","elements","value","stepInput","step","amountInput","amount","i","then","success","catch","failure","getElementById","showNotification"],"version":3,"file":"03-promises.bdb4af80.js.map"}